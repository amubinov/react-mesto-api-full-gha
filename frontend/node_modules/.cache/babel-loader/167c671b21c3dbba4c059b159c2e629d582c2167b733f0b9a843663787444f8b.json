{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useFormValidation } from '../utils/useFormValidation';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(props) {\n  _s();\n  const {\n    values,\n    errors,\n    isValid,\n    handleChange,\n    reset\n  } = useFormValidation();\n  useEffect(() => {\n    reset();\n  }, [props.isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name: values.nameCard,\n      link: values.urlCard\n    });\n  }\n  const errorClassName = name => `popup__error ${errors[name] ? 'popup__error_visible' : ''}`;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup_cards\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    textButton: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    isValid: isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input popup__input_type_name-card\",\n      id: \"inputNameCard\",\n      name: \"nameCard\",\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      required: true,\n      onChange: handleChange,\n      value: values.nameCard || '',\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: errorClassName('nameCard'),\n      id: \"inputNameCard-error\",\n      children: errors['nameCard']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input popup__input_type_url-card\",\n      id: \"inputUrlCard\",\n      name: \"urlCard\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      pattern: \"https://.*\",\n      required: true,\n      onChange: handleChange,\n      value: values.urlCard || '',\n      minLength: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: errorClassName('urlCard'),\n      id: \"inputUrlCard-error\",\n      children: errors['urlCard']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"UvkFbDmzg0LbzQ0biJVCAzgyK5o=\", false, function () {\n  return [useFormValidation];\n});\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","useEffect","useFormValidation","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","props","_s","values","errors","isValid","handleChange","reset","isOpen","handleSubmit","e","preventDefault","onAddPlace","name","nameCard","link","urlCard","errorClassName","title","textButton","onClose","onSubmit","children","className","id","type","placeholder","required","onChange","value","minLength","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","pattern","_c","$RefreshReg$"],"sources":["C:/Users/User/react-mesto-api-full-gha/frontend/src/components/AddPlacePopup.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useFormValidation } from '../utils/useFormValidation';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const { values, errors, isValid, handleChange, reset } = useFormValidation();\r\n\r\n  useEffect(() => {\r\n    reset()\r\n  }, [props.isOpen]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      name: values.nameCard,\r\n      link: values.urlCard,\r\n    });\r\n  }\r\n\r\n  const errorClassName = (name) => `popup__error ${errors[name] ? 'popup__error_visible' : ''}`\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"popup_cards\"\r\n      title=\"Новое место\"\r\n      textButton=\"Создать\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      isValid={isValid}\r\n    >\r\n      <input\r\n        className=\"popup__input popup__input_type_name-card\"\r\n        id=\"inputNameCard\"\r\n        name='nameCard'\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        required\r\n        onChange={handleChange}\r\n        value={values.nameCard || ''}\r\n        minLength='2'\r\n        maxLength='40'\r\n      />\r\n\r\n      <span className={errorClassName('nameCard')} id=\"inputNameCard-error\">{errors['nameCard']}</span>\r\n      <input\r\n        className=\"popup__input popup__input_type_url-card\"\r\n        id=\"inputUrlCard\"\r\n        name='urlCard'\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        pattern=\"https://.*\"\r\n        required\r\n        onChange={handleChange}\r\n        value={values.urlCard || ''}\r\n        minLength='2'\r\n      />\r\n      <span className={errorClassName('urlCard')} id=\"inputUrlCard-error\">{errors['urlCard']}</span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGX,iBAAiB,EAAE;EAE5ED,SAAS,CAAC,MAAM;IACdY,KAAK,EAAE;EACT,CAAC,EAAE,CAACN,KAAK,CAACO,MAAM,CAAC,CAAC;EAElB,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAElBV,KAAK,CAACW,UAAU,CAAC;MACfC,IAAI,EAAEV,MAAM,CAACW,QAAQ;MACrBC,IAAI,EAAEZ,MAAM,CAACa;IACf,CAAC,CAAC;EACJ;EAEA,MAAMC,cAAc,GAAIJ,IAAI,IAAM,gBAAeT,MAAM,CAACS,IAAI,CAAC,GAAG,sBAAsB,GAAG,EAAG,EAAC;EAE7F,oBACEd,OAAA,CAACF,aAAa;IACZgB,IAAI,EAAC,aAAa;IAClBK,KAAK,EAAC,+DAAa;IACnBC,UAAU,EAAC,4CAAS;IACpBX,MAAM,EAAEP,KAAK,CAACO,MAAO;IACrBY,OAAO,EAAEnB,KAAK,CAACmB,OAAQ;IACvBC,QAAQ,EAAEZ,YAAa;IACvBJ,OAAO,EAAEA,OAAQ;IAAAiB,QAAA,gBAEjBvB,OAAA;MACEwB,SAAS,EAAC,0CAA0C;MACpDC,EAAE,EAAC,eAAe;MAClBX,IAAI,EAAC,UAAU;MACfY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kDAAU;MACtBC,QAAQ;MACRC,QAAQ,EAAEtB,YAAa;MACvBuB,KAAK,EAAE1B,MAAM,CAACW,QAAQ,IAAI,EAAG;MAC7BgB,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,eAEFpC,OAAA;MAAMwB,SAAS,EAAEN,cAAc,CAAC,UAAU,CAAE;MAACO,EAAE,EAAC,qBAAqB;MAAAF,QAAA,EAAElB,MAAM,CAAC,UAAU;IAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACjGpC,OAAA;MACEwB,SAAS,EAAC,yCAAyC;MACnDC,EAAE,EAAC,cAAc;MACjBX,IAAI,EAAC,SAAS;MACdY,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,oGAAoB;MAChCU,OAAO,EAAC,YAAY;MACpBT,QAAQ;MACRC,QAAQ,EAAEtB,YAAa;MACvBuB,KAAK,EAAE1B,MAAM,CAACa,OAAO,IAAI,EAAG;MAC5Bc,SAAS,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb,eACFpC,OAAA;MAAMwB,SAAS,EAAEN,cAAc,CAAC,SAAS,CAAE;MAACO,EAAE,EAAC,oBAAoB;MAAAF,QAAA,EAAElB,MAAM,CAAC,SAAS;IAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChF;AAEpB;AAACjC,EAAA,CAzDQF,aAAa;EAAA,QACqCJ,iBAAiB;AAAA;AAAAyC,EAAA,GADnErC,aAAa;AA2DtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}