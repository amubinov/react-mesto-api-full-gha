{"ast":null,"code":"import { BASE_URL } from \"./auth\";\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`${res.status} ${res.statusText}`);\n    }\n  }\n  getMyInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  changeProfileData(items) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: items.name,\n        about: items.about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  changeUserAvatar(items) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: items.avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  getServerCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {}\n    }).then(res => this._checkResponse(res));\n  }\n  addCard(_ref) {\n    let {\n      name,\n      link\n    } = _ref;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      credentials: 'include',\n      headers: {}\n    }).then(res => this._checkResponse(res));\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => this._checkResponse(res));\n  }\n}\n/** Подключить API */\nconst api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["BASE_URL","Api","constructor","options","_baseUrl","baseUrl","_checkResponse","res","ok","json","Promise","reject","status","statusText","getMyInfo","fetch","method","credentials","headers","then","changeProfileData","items","body","JSON","stringify","name","about","changeUserAvatar","avatar","getServerCards","addCard","_ref","link","deleteCard","id","addLike","cardId","deleteLike","api"],"sources":["C:/Users/User/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["import { BASE_URL } from \"./auth\";\r\n\r\nclass Api {\r\n\tconstructor(options) {\r\n\t\tthis._baseUrl = options.baseUrl;\r\n\t}\r\n\r\n\t_checkResponse(res) {\r\n\t\tif (res.ok) {\r\n\t\t\treturn res.json();\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(`${res.status} ${res.statusText}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetMyInfo() {\r\n\t\treturn fetch(`${this._baseUrl}/users/me`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\tchangeProfileData(items) {\r\n\t\treturn fetch(`${this._baseUrl}/users/me`, {\r\n\t\t\tmethod: \"PATCH\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: items.name,\r\n\t\t\t\tabout: items.about,\r\n\t\t\t}),\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\tchangeUserAvatar(items) {\r\n\t\treturn fetch(`${this._baseUrl}/users/me/avatar`, {\r\n\t\t\tmethod: \"PATCH\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ avatar: items.avatar }),\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\tgetServerCards() {\r\n\t\treturn fetch(`${this._baseUrl}/cards`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\taddCard({ name, link }) {\r\n\t\treturn fetch(`${this._baseUrl}/cards`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname, link,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\tdeleteCard(id) {\r\n\t\treturn fetch(`${this._baseUrl}/cards/${id}`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t}\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\taddLike(cardId) {\r\n\t\treturn fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n\r\n\tdeleteLike(cardId) {\r\n\t\treturn fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(res => this._checkResponse(res));\r\n\t}\r\n}\r\n/** Подключить API */\r\nconst api = new Api\r\n\t({\r\n\t\tbaseUrl: BASE_URL,\r\n\t\theaders: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t});\r\n\r\nexport default api; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}