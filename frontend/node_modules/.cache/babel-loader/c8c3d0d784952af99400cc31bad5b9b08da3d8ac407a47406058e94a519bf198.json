{"ast":null,"code":"import { BASE_URL } from \"./auth\";\nexport class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n  _getServerReply(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getMyInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getServerReply);\n  }\n  getServerCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getServerReply);\n  }\n  changeProfileData(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getServerReply);\n  }\n  changeUserAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._url}/users/me/avatar`, {\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getServerReply);\n  }\n  addNewCard(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getServerReply);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getServerReply);\n  }\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/${id}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this._getServerReply);\n    } else {\n      return fetch(`${this._url}/cards/${id}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this._getServerReply);\n    }\n  }\n}\n\n// const api = new Api({\n//     url: \"https://mesto.nomoreparties.co/v1/cohort-61\",\n//     headers: {\n//         \"authorization\": \"871afe4f-c0f9-41b9-8dd4-b2dbe91cbc7d\",\n//         \"Content-Type\": \"application/json\",\n//     }\n// });\n\nconst api = new Api({\n  baseUrl: BASE_URL,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["BASE_URL","Api","constructor","_ref","url","headers","_url","_headers","_getServerReply","res","ok","json","Promise","reject","status","getMyInfo","fetch","method","then","getServerCards","changeProfileData","_ref2","name","about","body","JSON","stringify","changeUserAvatar","_ref3","avatar","addNewCard","_ref4","link","deleteCard","id","changeLikeCardStatus","isLiked","api","baseUrl"],"sources":["C:/Users/User/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["import { BASE_URL } from \"./auth\";\n\nexport class Api {\n    constructor({ url, headers }) {\n        this._url = url;\n        this._headers = headers;\n    }\n    _getServerReply(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    getMyInfo() {\n        return fetch(`${this._url}/users/me`,\n            {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._getServerReply)\n    }\n\n    getServerCards() {\n        return fetch(`${this._url}/cards`,\n            {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._getServerReply)\n    }\n    changeProfileData({ name, about }) {\n        return fetch(`${this._url}/users/me`,\n            {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({ name, about })\n            })\n            .then(this._getServerReply)\n    }\n    changeUserAvatar({ avatar }) {\n        return fetch(`${this._url}/users/me/avatar`,\n            {\n                headers: this._headers,\n                method: 'PATCH',\n                body: JSON.stringify({ avatar })\n            })\n            .then(this._getServerReply)\n    }\n    addNewCard({ name, link }) {\n        return fetch(`${this._url}/cards`,\n            {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({ name, link })\n            })\n            .then(this._getServerReply)\n    }\n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n            })\n            .then(this._getServerReply)\n    }\n\n    changeLikeCardStatus(id, isLiked) {\n        if (isLiked) {\n            return fetch(`${this._url}/cards/${id}/likes`,\n                {\n                    method: 'PUT',\n                    headers: this._headers\n                })\n                .then(this._getServerReply)\n        } else {\n            return fetch(`${this._url}/cards/${id}/likes`,\n                {\n                    method: 'DELETE',\n                    headers: this._headers,\n                })\n                .then(this._getServerReply)\n        }\n    }\n}\n\n// const api = new Api({\n//     url: \"https://mesto.nomoreparties.co/v1/cohort-61\",\n//     headers: {\n//         \"authorization\": \"871afe4f-c0f9-41b9-8dd4-b2dbe91cbc7d\",\n//         \"Content-Type\": \"application/json\",\n//     }\n// });\n\nconst api = new Api\n    ({\n        baseUrl: BASE_URL,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n    });\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}