{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\InfoTooltip.js\";\nimport SuccessIcon from \"../images/success-icon.svg\";\nimport FailIcon from \"../images/fail-icon.svg\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoToolTip(props) {\n  const icon = props.isSuccess ? SuccessIcon : FailIcon;\n  const message = props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.';\n  const alt = props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Не удалось зарегестрироваться.';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_tooltip ${props.isOpen ? \"popup_opened\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__tooltip-image\",\n        src: icon,\n        alt: alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup__tooltip-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-button\",\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0432\\u0441\\u043F\\u043B\\u044B\\u0432\\u0430\\u044E\\u0449\\u0435\\u0435 \\u043E\\u043A\\u043D\\u043E\",\n        onClick: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoToolTip;\nexport default InfoToolTip;\nvar _c;\n$RefreshReg$(_c, \"InfoToolTip\");","map":{"version":3,"names":["SuccessIcon","FailIcon","React","jsxDEV","_jsxDEV","InfoToolTip","props","icon","isSuccess","message","alt","className","isOpen","children","src","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js"],"sourcesContent":["import SuccessIcon from \"../images/success-icon.svg\";\r\nimport FailIcon from \"../images/fail-icon.svg\";\r\nimport React from \"react\";\r\n\r\nfunction InfoToolTip(props) {\r\n  const icon = props.isSuccess ? SuccessIcon : FailIcon;\r\n  const message = props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'\r\n  const alt = props.isSuccess ? 'Вы успешно зарегистрировались!' : 'Не удалось зарегестрироваться.'\r\n  return (\r\n    <div className={`popup popup_type_tooltip ${props.isOpen ? \"popup_opened\" : \"\"}`} >\r\n      <div className=\"popup__message-container\">\r\n        <img\r\n          className=\"popup__tooltip-image\"\r\n          src={icon}\r\n          alt={alt}\r\n        />\r\n        <p className=\"popup__tooltip-message\">{message}</p>\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          aria-label=\"Закрыть всплывающее окно\"\r\n          onClick={props.onClose}>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoToolTip;"],"mappings":";AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAMC,IAAI,GAAGD,KAAK,CAACE,SAAS,GAAGR,WAAW,GAAGC,QAAQ;EACrD,MAAMQ,OAAO,GAAGH,KAAK,CAACE,SAAS,GAAG,gCAAgC,GAAG,0CAA0C;EAC/G,MAAME,GAAG,GAAGJ,KAAK,CAACE,SAAS,GAAG,gCAAgC,GAAG,gCAAgC;EACjG,oBACEJ,OAAA;IAAKO,SAAS,EAAG,4BAA2BL,KAAK,CAACM,MAAM,GAAG,cAAc,GAAG,EAAG,EAAE;IAAAC,QAAA,eAC/ET,OAAA;MAAKO,SAAS,EAAC,0BAA0B;MAAAE,QAAA,gBACvCT,OAAA;QACEO,SAAS,EAAC,sBAAsB;QAChCG,GAAG,EAAEP,IAAK;QACVG,GAAG,EAAEA;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,eACFd,OAAA;QAAGO,SAAS,EAAC,wBAAwB;QAAAE,QAAA,EAAEJ;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnDd,OAAA;QACEO,SAAS,EAAC,qBAAqB;QAC/BQ,IAAI,EAAC,QAAQ;QACb,cAAW,wIAA0B;QACrCC,OAAO,EAAEd,KAAK,CAACe;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACI,EAAA,GAtBQjB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}