{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { useFormValidation } from '../utils/useFormValidation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(_ref) {\n  _s();\n  var _values$userName, _values$userDescripti;\n  let {\n    isOpen,\n    onChangeUser,\n    onClose\n  } = _ref;\n  // Подписка на контекст\n  const currentUser = useContext(CurrentUserContext);\n  const {\n    values,\n    errors,\n    isValid,\n    handleChange,\n    setValue,\n    setIsValid\n  } = useFormValidation();\n\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\n\n  useEffect(() => {\n    if (currentUser) {\n      setValue(\"userName\", currentUser.name);\n      setValue(\"userDescription\", currentUser.about);\n    }\n    if (currentUser.name && currentUser.about) {\n      setIsValid(true);\n    }\n  }, [currentUser, setValue, isOpen]);\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onChangeUser({\n      name: values['userName'],\n      about: values['userDescription']\n    });\n  }\n  const errorClassName = name => `popup__error ${errors[name] ? 'popup__error_visible' : ''}`;\n  const onClosePopup = () => {\n    onClose();\n    // reset({ 'userName': currentUser.name, 'userDescription': currentUser.about }, true)\n  };\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClosePopup,\n    onSubmit: handleSubmit,\n    name: \"popup_profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\xA0\\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    textButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isValid: isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input popup__input_type_name\",\n      id: \"inputName\",\n      type: \"text\",\n      name: \"userName\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      value: (_values$userName = values['userName']) !== null && _values$userName !== void 0 ? _values$userName : '',\n      onChange: handleChange,\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: errorClassName('userName'),\n      id: \"inputName-error\",\n      children: errors['userName']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__input popup__input_type_about\",\n      name: \"userDescription\",\n      id: \"inputAbout\",\n      type: \"text\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      value: (_values$userDescripti = values['userDescription']) !== null && _values$userDescripti !== void 0 ? _values$userDescripti : '',\n      onChange: handleChange,\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: errorClassName('userDescription'),\n      id: \"inputAbout-error\",\n      children: errors['userDescription']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"yg2r3ocI5ttkhW4VGpUi2TOiqtU=\", false, function () {\n  return [useFormValidation];\n});\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","useContext","useEffect","PopupWithForm","CurrentUserContext","useFormValidation","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","_values$userName","_values$userDescripti","isOpen","onChangeUser","onClose","currentUser","values","errors","isValid","handleChange","setValue","setIsValid","name","about","handleSubmit","e","preventDefault","errorClassName","onClosePopup","onSubmit","title","textButton","children","className","id","type","placeholder","value","onChange","required","minLength","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { useFormValidation } from '../utils/useFormValidation';\r\n\r\nfunction EditProfilePopup({ isOpen, onChangeUser, onClose }) {\r\n\r\n  // Подписка на контекст\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const { values, errors, isValid, handleChange, setValue, setIsValid } = useFormValidation();\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setValue(\"userName\", currentUser.name);\r\n      setValue(\"userDescription\", currentUser.about);\r\n    }\r\n    if (currentUser.name && currentUser.about) {\r\n      setIsValid(true);\r\n    }\r\n  }, [currentUser, setValue, isOpen]);\r\n\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onChangeUser({\r\n      name: values['userName'],\r\n      about: values['userDescription']\r\n    });\r\n  }\r\n\r\n  const errorClassName = (name) => `popup__error ${errors[name] ? 'popup__error_visible' : ''}`\r\n\r\n  const onClosePopup = () => {\r\n    onClose()\r\n    // reset({ 'userName': currentUser.name, 'userDescription': currentUser.about }, true)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={isOpen}\r\n      onClose={onClosePopup}\r\n      onSubmit={handleSubmit}\r\n      name=\"popup_profile\"\r\n      title=\"Редактировать&nbsp;профиль\"\r\n      textButton=\"Сохранить\"\r\n      isValid={isValid}>\r\n\r\n      <input\r\n        className=\"popup__input popup__input_type_name\"\r\n        id=\"inputName\"\r\n        type=\"text\"\r\n        name='userName'\r\n        placeholder=\"Имя\"\r\n        value={values['userName'] ?? ''}\r\n        onChange={handleChange}\r\n        required\r\n        minLength='2'\r\n        maxLength='40'\r\n      />\r\n      <span className={errorClassName('userName')} id=\"inputName-error\">{errors['userName']}</span>\r\n      <input\r\n        className=\"popup__input popup__input_type_about\"\r\n        name='userDescription'\r\n        id=\"inputAbout\"\r\n        type=\"text\"\r\n        placeholder=\"О себе\"\r\n        value={values['userDescription'] ?? ''}\r\n        onChange={handleChange}\r\n        required\r\n        minLength='2'\r\n        maxLength='40'\r\n      />\r\n      <span className={errorClassName('userDescription')} id=\"inputAbout-error\">{errors['userDescription']}</span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}